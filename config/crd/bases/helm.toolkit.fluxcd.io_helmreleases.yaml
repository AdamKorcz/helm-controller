
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: helmreleases.helm.toolkit.fluxcd.io
spec:
  group: helm.toolkit.fluxcd.io
  names:
    kind: HelmRelease
    listKind: HelmReleaseList
    plural: helmreleases
    shortNames:
    - hr
    singular: helmrelease
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].message
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v2alpha1
    schema:
      openAPIV3Schema:
        description: HelmRelease is the Schema for the helmreleases API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: HelmReleaseSpec defines the desired state of HelmRelease.
            properties:
              chart:
                description: Chart defines the Helm chart name, version and repository.
                properties:
                  interval:
                    description: Interval at which to check the Helm repository for
                      chart updates. Defaults to 'HelmReleaseSpec.Interval'.
                    type: string
                  name:
                    description: Name of the Helm chart, as made available by the
                      referenced Helm repository.
                    type: string
                  sourceRef:
                    description: The name and namespace of the source HelmRepository
                      the chart is available at.
                    properties:
                      apiVersion:
                        description: APIVersion of the referent.
                        type: string
                      kind:
                        description: Kind of the referent.
                        enum:
                        - HelmRepository
                        type: string
                      name:
                        description: Name of the referent.
                        type: string
                      namespace:
                        description: Namespace of the referent.
                        type: string
                    required:
                    - name
                    type: object
                  version:
                    description: Version semver expression, defaults to latest when
                      omitted.
                    type: string
                required:
                - name
                - sourceRef
                type: object
              dependsOn:
                description: DependsOn may contain a list of HelmReleases that must
                  be ready before this HelmRelease can be reconciled.
                items:
                  type: string
                type: array
              install:
                description: Install holds the configuration for Helm install actions
                  for this release.
                properties:
                  disableHooks:
                    description: DisableHooks prevents hooks from running during the
                      Helm install action.
                    type: boolean
                  disableOpenAPIValidation:
                    description: DisableOpenAPIValidation prevents the Helm install
                      action from validating rendered templates against the Kubernetes
                      OpenAPI Schema.
                    type: boolean
                  disableWait:
                    description: DisableWait disables the waiting for resources to
                      be ready after a Helm install has been performed.
                    type: boolean
                  replace:
                    description: Replace tells the Helm install action to re-use the
                      'ReleaseName', but only if that name is a deleted release which
                      remains in the history.
                    type: boolean
                  skipCRDs:
                    description: SkipCRDs tells the Helm install action to not install
                      any CRDs. By default, CRDs are installed if not already present.
                    type: boolean
                  timeout:
                    description: Timeout is the time to wait for any individual Kubernetes
                      operation (like Jobs for hooks) during the performance of a
                      Helm install action. Defaults to 'HelmReleaseSpec.Timeout'.
                    type: string
                type: object
              interval:
                description: Interval at which to reconcile the Helm release.
                type: string
              maxHistory:
                description: MaxHistory is the number of revisions saved by Helm for
                  this release. Use '0' for an unlimited number of revisions; defaults
                  to '10'.
                type: integer
              releaseName:
                description: ReleaseName used for the Helm release. Defaults to a
                  composition of '[TargetNamespace-]Name'.
                type: string
              rollback:
                description: Rollback holds the configuration for Helm rollback actions
                  for this release.
                properties:
                  cleanupOnFail:
                    description: CleanupOnFail allows deletion of new resources created
                      during the Helm rollback action when it fails.
                    type: boolean
                  disableHooks:
                    description: DisableHooks prevents hooks from running during the
                      Helm rollback action.
                    type: boolean
                  disableWait:
                    description: DisableWait disables the waiting for resources to
                      be ready after a Helm rollback has been performed.
                    type: boolean
                  enable:
                    description: Enable enables Helm rollback actions for this release
                      after an Helm install or upgrade action failure.
                    type: boolean
                  force:
                    description: Force forces resource updates through a replacement
                      strategy.
                    type: boolean
                  recreate:
                    description: Recreate performs pod restarts for the resource if
                      applicable.
                    type: boolean
                  timeout:
                    description: Timeout is the time to wait for any individual Kubernetes
                      operation (like Jobs for hooks) during the performance of a
                      Helm rollback action. Defaults to 'HelmReleaseSpec.Timeout'.
                    type: string
                type: object
              suspend:
                description: Suspend tells the reconciler to suspend reconciliation
                  for this HelmRelease, it does not apply to already started reconciliations.
                  Defaults to false.
                type: boolean
              targetNamespace:
                description: TargetNamespace to target when performing operations
                  for the HelmRelease. Defaults to the namespace of the HelmRelease.
                type: string
              test:
                description: Test holds the configuration for Helm test actions for
                  this release.
                properties:
                  enable:
                    description: Enable enables Helm test actions for this release
                      after an Helm install or upgrade action has been performed.
                    type: boolean
                  timeout:
                    description: Timeout is the time to wait for any individual Kubernetes
                      operation during the performance of a Helm test action. Defaults
                      to 'HelmReleaseSpec.Timeout'.
                    type: string
                type: object
              timeout:
                description: Timeout is the time to wait for any individual Kubernetes
                  operation (like Jobs for hooks) during the performance of a Helm
                  action. Defaults to '5m0s'.
                type: string
              uninstall:
                description: Uninstall holds the configuration for Helm uninstall
                  actions for this release.
                properties:
                  disableHooks:
                    description: DisableHooks prevents hooks from running during the
                      Helm rollback action.
                    type: boolean
                  keepHistory:
                    description: KeepHistory tells Helm to remove all associated resources
                      and mark the release as deleted, but retain the release history.
                    type: boolean
                  timeout:
                    description: Timeout is the time to wait for any individual Kubernetes
                      operation (like Jobs for hooks) during the performance of a
                      Helm uninstall action. Defaults to 'HelmReleaseSpec.Timeout'.
                    type: string
                type: object
              upgrade:
                description: Upgrade holds the configuration for Helm upgrade actions
                  for this release.
                properties:
                  cleanupOnFail:
                    description: CleanupOnFail allows deletion of new resources created
                      during the Helm upgrade action when it fails.
                    type: boolean
                  disableHooks:
                    description: DisableHooks prevents hooks from running during the
                      Helm upgrade action.
                    type: boolean
                  disableOpenAPIValidation:
                    description: DisableOpenAPIValidation prevents the Helm upgrade
                      action from validating rendered templates against the Kubernetes
                      OpenAPI Schema.
                    type: boolean
                  disableWait:
                    description: DisableWait disables the waiting for resources to
                      be ready after a Helm upgrade has been performed.
                    type: boolean
                  force:
                    description: Force forces resource updates through a replacement
                      strategy.
                    type: boolean
                  maxRetries:
                    description: MaxRetries is the number of retries that should be
                      attempted on failures before bailing. Defaults to '0', a negative
                      integer equals to unlimited retries.
                    type: integer
                  preserveValues:
                    description: PreserveValues will make Helm reuse the last release's
                      values and merge in overrides from 'Values'. Setting this flag
                      makes the HelmRelease non-declarative.
                    type: boolean
                  timeout:
                    description: Timeout is the time to wait for any individual Kubernetes
                      operation (like Jobs for hooks) during the performance of a
                      Helm upgrade action. Defaults to 'HelmReleaseSpec.Timeout'.
                    type: string
                type: object
              values:
                description: Values holds the values for this Helm release.
                x-kubernetes-preserve-unknown-fields: true
              valuesFrom:
                description: ValuesFrom holds references to resources containing Helm
                  values, and information about how they should be merged.
                items:
                  description: ValuesReference contains a reference to a resource
                    containing Helm values, and optionally the key they can be found
                    at.
                  properties:
                    kind:
                      description: Kind of the values referent, valid values are ('Secret',
                        'ConfigMap').
                      enum:
                      - Secret
                      - ConfigMap
                      type: string
                    name:
                      description: Name of the values referent. Should reside in the
                        same namespace as the referring resource.
                      type: string
                    targetPath:
                      description: TargetPath is the YAML dot notation path the value
                        should be merged at. When set, the ValuesKey is expected to
                        be a single flat value. Defaults to 'None', which results
                        in the values getting merged at the root.
                      type: string
                    valuesKey:
                      description: ValuesKey is the data key where the values.yaml
                        or a specific value can be found at. Defaults to 'values.yaml'.
                      type: string
                  required:
                  - kind
                  - name
                  type: object
                type: array
            required:
            - chart
            - interval
            type: object
          status:
            description: HelmReleaseStatus defines the observed state of HelmRelease
            properties:
              conditions:
                description: Conditions holds the conditions for the HelmRelease.
                items:
                  description: Condition contains condition information for a HelmRelease.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the timestamp corresponding
                        to the last status change of this condition.
                      format: date-time
                      type: string
                    message:
                      description: Message is a human readable description of the
                        details of the last transition, complementing reason.
                      type: string
                    reason:
                      description: Reason is a brief machine readable explanation
                        for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of ('True', 'False',
                        'Unknown').
                      type: string
                    type:
                      description: Type of the condition, one of ('Ready', 'Install',
                        'Upgrade', 'Test', 'Rollback', 'Uninstall').
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              failures:
                description: Failures is the reconciliation failure count. It is reset
                  after a successful reconciliation.
                format: int64
                type: integer
              helmChart:
                description: HelmChart is the namespaced name of the HelmChart resource
                  created by the controller for the HelmRelease.
                type: string
              lastAppliedRevision:
                description: LastAppliedRevision is the revision of the last successfully
                  applied source.
                type: string
              lastAttemptedRevision:
                description: LastAttemptedRevision is the revision of the last reconciliation
                  attempt.
                type: string
              lastAttemptedValuesChecksum:
                description: LastAttemptedValuesChecksum is the SHA1 checksum of the
                  values of the last reconciliation attempt.
                type: string
              lastReleaseRevision:
                description: LastReleaseRevision is the revision of the last successful
                  Helm release.
                type: integer
              observedGeneration:
                description: ObservedGeneration is the last reconciled generation.
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
